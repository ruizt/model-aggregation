function [supports, convCheck] = lasso_supports( ...
    X_mx, ... 
    Y_mx, ...
    lambda_path, ... % regularization path
    intercept_idx, ...
    dist, ... % response distribution (1 for poisson, 2 for gaussian)
    alpha, ... % elastic net mixing parameter
    beta0, ...
    maxIter, ... % iteration limit (max number of cycles through coordinates)
    convCrit) % convergence criterion (normalized L1 distance)

% compute lasso estimates across path
[betab, nIter, ~] = lasso_var_path(...
    X_mx, ... 
    Y_mx, ... 
    lambda_path, ... 
    dist, ... 
    alpha, ...
    beta0, ...
    maxIter, ... 
    convCrit, ... 
    intercept_idx);

% find nonzero positions
[~, out_nLam] = size(betab);
supports = cell(out_nLam, 1);
for outLam = 1:out_nLam
    supports{outLam} = find(betab(:, outLam) ~= 0);
end

% check for convergence (iteration limit reached?)
convCheck = (nIter == maxIter);